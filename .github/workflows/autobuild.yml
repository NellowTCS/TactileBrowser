name: Build TactileBrowser

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  desktop-build:
    name: Build Desktop App (macOS ${{ matrix.arch }})
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64, x86_64]

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Calculate cache key suffix
        id: cache-key
        run: echo "CACHE_KEY_SUFFIX=$(git hash-object desktop-src/CMakeLists.txt)" >> $GITHUB_ENV

      - name: Cache CMake build files
        uses: actions/cache@v3
        id: cmake-cache
        with:
          path: desktop-src/CMakeFiles
          key: cmake-build-${{ matrix.arch }}-${{ env.CACHE_KEY_SUFFIX }}
          restore-keys: |
            cmake-build-${{ matrix.arch }}-

      - name: Install dependencies
        run: |
          # SDL2 is installed natively on macos runners, but ensure installed
          if ! brew list sdl2 &>/dev/null; then
            brew install sdl2
          fi

      - name: Set architecture environment variable for CMake
        run: echo "CMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Build with CMake and Make
        working-directory: desktop-src
        run: |
          cmake . -DCMAKE_BUILD_TYPE=Debug -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}
          make

      - name: Archive macOS app bundle
        uses: actions/upload-artifact@v3
        with:
          name: TactileBrowser-app-${{ matrix.arch }}
          path: desktop-src/main/TactileBrowser.app

  espidf-build:
    name: Build ESP-IDF apps
    runs-on: ubuntu-latest

    env:
      IDF_VERSION: v5.4
      PIP_CACHE_DIR: ~/.cache/pip

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache ESP-IDF SDK
        uses: actions/cache@v3
        with:
          path: esp-idf
          key: esp-idf-${{ env.IDF_VERSION }}-${{ runner.os }}-v1
          restore-keys: esp-idf-

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-v1
          restore-keys: pip-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0

      - name: Install ESP-IDF v5.4 if cache miss
        if: steps.cache-esp-idf-sdk.outputs.cache-hit != 'true'
        run: |
          wget https://dl.espressif.com/dl/esp-idf/releases/esp-idf-${IDF_VERSION}.zip -O esp-idf-${IDF_VERSION}.zip
          unzip esp-idf-${IDF_VERSION}.zip
          mv esp-idf-${IDF_VERSION} esp-idf
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install -r esp-idf/requirements.txt

      - name: Setup ESP-IDF environment variables
        run: |
          echo "IDF_PATH=$PWD/esp-idf" >> $GITHUB_ENV
          echo "PATH=$PATH:$PWD/esp-idf/tools" >> $GITHUB_ENV

      - name: Run TactilityTool build (ESP-IDF)
        working-directory: src
        run: |
          python3 ../tactility.py build all

      - name: Upload ESP32 ELF artifact
        uses: actions/upload-artifact@v3
        with:
          name: TactileBrowser-esp32-elf
          path: src/build-esp32/TactileBrowser.app.elf

      - name: Upload ESP32S3 ELF artifact
        uses: actions/upload-artifact@v3
        with:
          name: TactileBrowser-esp32s3-elf
          path: src/build-esp32s3/TactileBrowser.app.elf
